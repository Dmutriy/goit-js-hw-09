{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAO,CACXC,MAAOC,SAASC,cAAc,uBAC9BC,KAAMF,SAASC,cAAc,sBAC7BE,OAAQH,SAASC,cAAc,wBAC/BG,UAAWJ,SAASC,cAAc,UAGpC,SAASI,EAAcC,EAAGC,GACxB,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,EAAEH,E,WAAGC,IAEbG,EAAO,C,EAAEJ,E,WAAGC,GAAa,GAE1BA,EAAW,G,CAIlBT,EAAKM,UAAUW,iBAAiB,UAAUC,IACxCA,EAAIC,iBACJ,IAAIC,EAAaC,OAAOrB,EAAKC,MAAMqB,OAC/BC,EAAYF,OAAOrB,EAAKI,KAAKkB,OAC7BE,EAAcH,OAAOrB,EAAKK,OAAOiB,OAErC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrClB,EAAckB,EAAGL,GACdM,MAAK,EAAClB,EAAEA,EAACC,WAAEA,KACHX,EAAA6B,OAAOC,QAAQ,qBAAqBpB,QAAQC,SAEpDoB,OAAM,EAACrB,EAAEA,EAACC,WAAEA,KACJX,EAAA6B,OAAOG,QAAQ,oBAAoBtB,QAAQC,SAEtDW,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst refs = {\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  btnSubmit: document.querySelector('.form'),\n};\n\nfunction createPromise(i, delayValue) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ i, delayValue });\n      } else {\n        reject({ i, delayValue });\n      }\n    }, delayValue);\n  });\n}\n\nrefs.btnSubmit.addEventListener('submit', evt => {\n  evt.preventDefault();\n  let delayValue = Number(refs.delay.value);\n  let stepValue = Number(refs.step.value);\n  let amountValue = Number(refs.amount.value);\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue)\n      .then(({ i, delayValue }) => {\n        return Notify.success(`Fulfilled promise ${i} in ${delayValue}ms`);\n      })\n      .catch(({ i, delayValue }) => {\n        return Notify.failure(`Rejected promise ${i} in ${delayValue}ms`);\n      });\n    delayValue += stepValue;\n  }\n});\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","delay","document","querySelector","step","amount","btnSubmit","$47d4ff9957288465$var$createPromise","i","delayValue","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","delayValue1","Number","value","stepValue","amountValue","i1","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.5029eb5d.js.map"}